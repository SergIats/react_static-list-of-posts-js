{"version":3,"sources":["App.jsx","components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","index.jsx"],"names":["posts","users","comments","UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","map","id","PostInfo","post","title","length","PostList","findUser","find","filterComments","filter","postId","postsFromServer","usersFromServer","commentsFromServer","userId","App","ReactDOM","render","document","getElementById"],"mappings":"4t8IAekBA,EAAOC,EAAOC,E,6CCfnBC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCLMI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBL,EAAsBK,EAAtBL,KAAMC,EAAgBI,EAAhBJ,MAAOK,EAASD,EAATC,KAErB,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEtC,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAGL,qBAAKC,UAAU,oBAAf,SACGI,QChBIC,EAAc,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAH,OACzB,qBAAKK,UAAU,cAAf,SAEIL,EAASW,KAAI,SAAAH,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQI,UCHvCC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBZ,EAAgCY,EAAhCZ,KAAMa,EAA0BD,EAA1BC,MAAON,EAAmBK,EAAnBL,KAAMT,EAAac,EAAbd,SAE3B,OACE,sBAAKK,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUb,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGmB,IAApBT,EAASgB,OACL,cAAC,EAAD,CAAahB,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,oCC5BDiB,EAAW,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,OACtB,qBAAKO,UAAU,WAAf,SAEIP,EAAMa,KAAI,SAAAG,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,U,qBLClCM,EAAW,SAACnB,EAAOa,GAAR,OACfb,EAAMoB,MAAK,SAAAjB,GAAI,OAAIA,EAAKU,KAAOA,MAG3BQ,EAAiB,SAACpB,EAAUY,GAAX,OACrBZ,EAASqB,QAAO,SAAAb,GAAO,OAAIA,EAAQc,SAAWV,MAW1Cd,GARYA,EAQKyB,EARExB,EAQeyB,EARRxB,EAQyByB,EAPvD,YAAI3B,GAAOa,KAAI,SAAAG,GAAI,kCACdA,GADc,IAEjBZ,KAAMgB,EAASnB,EAAOe,EAAKY,QAC3B1B,SAAUoB,EAAepB,EAAUc,EAAKF,UAM/Be,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUP,MAAOA,QMxBrB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b0cb145.chunk.js","sourcesContent":["import './App.scss';\nimport { PostList } from './components/PostList/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nconst findUser = (users, id) => (\n  users.find(user => user.id === id)\n);\n\nconst filterComments = (comments, id) => (\n  comments.filter(comment => comment.postId === id)\n);\n\nconst getPosts = (posts, users, comments) => (\n  [...posts].map(post => ({\n    ...post,\n    user: findUser(users, post.userId),\n    comments: filterComments(comments, post.id),\n  }))\n);\n\nconst posts = getPosts(postsFromServer, usersFromServer, commentsFromServer);\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","export const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {\n      comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n    }\n  </div>\n);\n","import { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList/CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const { user, title, body, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n      {\n        comments.length !== 0\n          ? <CommentList comments={comments} />\n          : (\n            <>\n              <hr />\n\n              <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n            </>\n          )\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {\n      posts.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))\n    }\n  </div>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}